* 6809 assembly program generated by cmoc 0.1.86


	SECTION	code


_rand	EXPORT


*******************************************************************************

* FUNCTION rand(): defined at rand.c:8
_rand	EQU	*
* Calling convention: Default
* Line rand.c:12: inline assembly
* Inline assembly:


; _Rand_seed ^= _Rand_seed << 7;
        leax __Rand_seed+0,PCR
        lda 1,x
        clrb ; D is now _Rand_seed << 8
        lsra
        rorb ; D is now _Rand_seed << 7, without bit 15
        pshs a
        lda ,x ; test bit 8 of _Rand_seed
        lsra
        puls a
        bcc @bit15Done
        ora #$80 ; bit 8 of _Rand_seed now in bit 15 of D
@bit15Done
        eora ,x
        eorb 1,x
        std __Rand_seed+0,PCR
;
; _Rand_seed ^= _Rand_seed >> 9;
        ldb ,x ; high byte
        lsrb ; B = _Rand_seed >> 9 (high byte is 0)
        eorb 1,x ; no need to EOR high byte of _Rand_seed
        stb 1,x
;
; _Rand_seed ^= _Rand_seed << 8;
        lda 1,x ; A = _Rand_seed << 8 (low byte is 0)
        eora ,x ; no need to EOR low byte of _Rand_seed
        sta ,x
;
; return (int) (_Rand_seed & 0x7FFF);
        anda #$7F
        rts
    

* End of inline assembly.
* Line rand.c:45: return with value
	CLRA
	CLRB
* optim: branchToNextLocation
* Useless label L00001 removed
	RTS
* END FUNCTION rand(): defined at rand.c:8
funcend_rand	EQU *
funcsize_rand	EQU	funcend_rand-_rand
_srand	EXPORT


*******************************************************************************

* FUNCTION srand(): defined at rand.c:56
_srand	EQU	*
* Assembly-only function.
* Line rand.c:60: inline assembly
* Inline assembly:


        ldd 2,s ; newSeed
        bne @store
        ldd #1
@store
        std __Rand_seed+0,PCR
    

* End of inline assembly.
* Useless label L00002 removed
	RTS
* END FUNCTION srand(): defined at rand.c:56
funcend_srand	EQU *
funcsize_srand	EQU	funcend_srand-_srand


	ENDSECTION




	SECTION	initgl




*******************************************************************************

* Initialize global variables.


	ENDSECTION




	SECTION	rodata


string_literals_start	EQU	*
string_literals_end	EQU	*


*******************************************************************************

* READ-ONLY GLOBAL VARIABLES


	ENDSECTION




	SECTION	rwdata


* Statically-initialized global variables
__Rand_seed	EQU	*		_Rand_seed: unsigned int: rand.c:1
	FDB	$01		decimal 1
.global.static.variable._Rand_seed	EQU	*
* Statically-initialized local static variables


	ENDSECTION




	SECTION	bss


bss_start	EQU	*
* Uninitialized global variables
* Uninitialized local static variables
bss_end	EQU	*


	ENDSECTION




*******************************************************************************

* Importing 0 utility routine(s).


*******************************************************************************

	END
