* 6809 assembly program generated by cmoc 0.1.86


	SECTION	code


___va_arg	IMPORT
_abs	IMPORT
_adddww	IMPORT
_atoi	IMPORT
_atol	IMPORT
_atoui	IMPORT
_atoul	IMPORT
_bsearch	IMPORT
_cmpdww	IMPORT
_delay	IMPORT
_divdwb	IMPORT
_divdww	IMPORT
_divmod16	IMPORT
_divmod8	IMPORT
_dwtoa	IMPORT
_enable_printf_float	IMPORT
_exit	IMPORT
_isalnum	IMPORT
_isalpha	IMPORT
_isdigit	IMPORT
_isspace	IMPORT
_itoa10	IMPORT
_labs	IMPORT
_ltoa10	IMPORT
_memchr	IMPORT
_memcmp	IMPORT
_memcpy	IMPORT
_memichr	IMPORT
_memicmp	IMPORT
_memmove	IMPORT
_memset	IMPORT
_memset16	IMPORT
_mulwb	IMPORT
_mulww	IMPORT
_printf	IMPORT
_putchar	IMPORT
_putstr	IMPORT
_qsort	IMPORT
_rand	IMPORT
_readline	IMPORT
_readword	IMPORT
_sbrk	IMPORT
_sbrkmax	IMPORT
_setConsoleOutHook	IMPORT
_set_null_ptr_handler	IMPORT
_set_stack_overflow_handler	IMPORT
_sprintf	IMPORT
_sqrt16	IMPORT
_sqrt32	IMPORT
_srand	IMPORT
_strcat	IMPORT
_strchr	IMPORT
_strcmp	IMPORT
_strcpy	IMPORT
_strcspn	IMPORT
_stricmp	IMPORT
_strlen	IMPORT
_strlwr	IMPORT
_strncmp	IMPORT
_strncpy	IMPORT
_strpbrk	IMPORT
_strrchr	IMPORT
_strstr	IMPORT
_strtok	IMPORT
_strtol	IMPORT
_strtoul	IMPORT
_strupr	IMPORT
_subdww	IMPORT
_tolower	IMPORT
_toupper	IMPORT
_ultoa10	IMPORT
_utoa10	IMPORT
_vprintf	IMPORT
_vsprintf	IMPORT
_zerodw	IMPORT
_strspn	EXPORT


*******************************************************************************

* FUNCTION strspn(): defined at strspn.c:5
_strspn	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
	LEAS	-2,S
* Formal parameter(s):
*      4,U:    2 bytes: s: const char *: line 5
*      6,U:    2 bytes: accept: const char *: line 5
* Local non-static variable(s):
*     -2,U:    2 bytes: counter: unsigned int: line 7
* Line strspn.c:7: init of variable counter
	CLRA
	CLRB
	STD	-2,U		variable counter
* Line strspn.c:8: while
	BRA	L00079		jump to while condition
L00078	EQU	*		while body
* Line strspn.c:9: pre-increment
	LDX	-2,U		variable `counter', declared at strspn.c:9
	LEAX	1,X
	STX	-2,U
L00079	EQU	*		while condition at strspn.c:8
	LDB	[4,U]		indirection
* optim: loadCmpZeroBeqOrBne
	BEQ	L00080		 (optim: condBranchOverUncondBranch)
* optim: condBranchOverUncondBranch
* Useless label L00081 removed
	CLRA
	CLRB
* Emitted no code to cast `int' to `void *'
	PSHS	B,A
* Line strspn.c:8: function call: strchr()
	LDX	4,U		get pointer s
	LDB	,X+		indirection with post-increment
	STX	4,U		store incremented pointer s
	SEX			promoting byte argument to word
	PSHS	B,A		argument 2 of strchr(): const char
	LDD	6,U		variable `accept', declared at strspn.c:5
	PSHS	B,A		argument 1 of strchr(): const char *
	LBSR	_strchr
	LEAS	4,S
	CMPD	,S++
	BNE	L00078
* optim: branchToNextLocation
L00080	EQU	*		after end of while starting at strspn.c:8
* Line strspn.c:10: return with value
	LDD	-2,U		variable `counter', declared at strspn.c:7
* optim: branchToNextLocation
* Useless label L00077 removed
	LEAS	,U
	PULS	U,PC
* END FUNCTION strspn(): defined at strspn.c:5
funcend_strspn	EQU *
funcsize_strspn	EQU	funcend_strspn-_strspn


	ENDSECTION




	SECTION	initgl




*******************************************************************************

* Initialize global variables.


	ENDSECTION




	SECTION	rodata


string_literals_start	EQU	*
string_literals_end	EQU	*


*******************************************************************************

* READ-ONLY GLOBAL VARIABLES


	ENDSECTION




	SECTION	rwdata


* Statically-initialized global variables
* Statically-initialized local static variables


	ENDSECTION




	SECTION	bss


bss_start	EQU	*
* Uninitialized global variables
* Uninitialized local static variables
bss_end	EQU	*


	ENDSECTION




*******************************************************************************

* Importing 1 utility routine(s).
_strchr	IMPORT


*******************************************************************************

	END
