* 6809 assembly program generated by cmoc 0.1.86


	SECTION	code


___va_arg	IMPORT
_abs	IMPORT
_adddww	IMPORT
_atoi	IMPORT
_atol	IMPORT
_atoui	IMPORT
_atoul	IMPORT
_bsearch	IMPORT
_cmpdww	IMPORT
_delay	IMPORT
_divdwb	IMPORT
_divdww	IMPORT
_divmod16	IMPORT
_divmod8	IMPORT
_dwtoa	IMPORT
_enable_printf_float	IMPORT
_exit	IMPORT
_isalnum	IMPORT
_isalpha	IMPORT
_isdigit	IMPORT
_isspace	IMPORT
_itoa10	IMPORT
_labs	IMPORT
_memchr	IMPORT
_memcmp	IMPORT
_memcpy	IMPORT
_memichr	IMPORT
_memicmp	IMPORT
_memmove	IMPORT
_memset	IMPORT
_memset16	IMPORT
_mulwb	IMPORT
_mulww	IMPORT
_printf	IMPORT
_putchar	IMPORT
_putstr	IMPORT
_qsort	IMPORT
_rand	IMPORT
_readline	IMPORT
_readword	IMPORT
_sbrk	IMPORT
_sbrkmax	IMPORT
_setConsoleOutHook	IMPORT
_set_null_ptr_handler	IMPORT
_set_stack_overflow_handler	IMPORT
_sprintf	IMPORT
_sqrt16	IMPORT
_sqrt32	IMPORT
_srand	IMPORT
_strcat	IMPORT
_strchr	IMPORT
_strcmp	IMPORT
_strcpy	IMPORT
_strcspn	IMPORT
_stricmp	IMPORT
_strlen	IMPORT
_strlwr	IMPORT
_strncmp	IMPORT
_strncpy	IMPORT
_strpbrk	IMPORT
_strrchr	IMPORT
_strspn	IMPORT
_strstr	IMPORT
_strtok	IMPORT
_strtol	IMPORT
_strtoul	IMPORT
_strupr	IMPORT
_subdww	IMPORT
_tolower	IMPORT
_toupper	IMPORT
_ultoa10	IMPORT
_utoa10	IMPORT
_vprintf	IMPORT
_vsprintf	IMPORT
_zerodw	IMPORT
_ltoa10	EXPORT


*******************************************************************************

* FUNCTION ltoa10(): defined at ltoa.c:10
_ltoa10	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
	LEAS	-10,S
* Formal parameter(s):
*      4,U:    4 bytes: value: long: line 10
*      8,U:    2 bytes: str: char *: line 10
* Local non-static variable(s):
*    -10,U:    4 bytes: $V00078: long: line 19
*     -6,U:    2 bytes: writer: char *: line 12
*     -4,U:    4 bytes: u: unsigned long: line 15
* Line ltoa.c:12: init of variable writer
	LDD	8,U		variable `str', declared at ltoa.c:10
	STD	-6,U		variable writer
* Line ltoa.c:16: if
* push right operand of comparison
	CLRA
	CLRB
	PSHS	B,A
* push left operand of comparison
	LEAX	4,U		variable `value', declared at ltoa.c:10
	PSHS	X
	LBSR	cmpDWordSignedInt	sets N, Z, V, C; preserves X
	LEAS	4,S
	BGE	L00080		 (optim: condBranchOverUncondBranch)
* optim: condBranchOverUncondBranch
* Useless label L00079 removed
* Line ltoa.c:17
* Line ltoa.c:18: assignment: =
	LDX	-6,U		variable writer
	LDB	#$2D
	STB	,X+		post-increment
	STX	-6,U
* Line ltoa.c:19: assignment: =
	LEAX	4,U		variable `value', declared at ltoa.c:10
	TFR	X,D		operand
	LEAX	-10,U		address of result of operator
	LBSR	copyDWord	preserves X
	LBSR	negateDWord	preserves X
	TFR	X,D		make D point to source struct
	LEAX	-4,U		variable `u', declared at ltoa.c:15
	LBSR	copyDWord	copy 4-byte struct (preserves X)
	BRA	L00081		jump over else clause
L00080	EQU	*		else clause of if() started at ltoa.c:16
* Line ltoa.c:22
* Line ltoa.c:22: assignment: =
	LEAX	4,U		variable `value', declared at ltoa.c:10
	TFR	X,D		make D point to source struct
	LEAX	-4,U		variable `u', declared at ltoa.c:15
	LBSR	copyDWord	copy 4-byte struct (preserves X)
L00081	EQU	*		end of if() started at ltoa.c:16
* Line ltoa.c:24: function call: ultoa10()
	LDD	-6,U		variable `writer', declared at ltoa.c:12
	PSHS	B,A		argument 2 of ultoa10(): char *
	LEAX	-4,U		variable `u', declared at ltoa.c:15
	LEAS	-4,S		pass unsigned long by value
	LBSR	push4ByteStruct	argument 1 of ultoa10(): unsigned long
	LBSR	_ultoa10
	LEAS	6,S
* Line ltoa.c:25: return with value
	LDD	8,U		variable `str', declared at ltoa.c:10
* optim: branchToNextLocation
* Useless label L00077 removed
	LEAS	,U
	PULS	U,PC
* END FUNCTION ltoa10(): defined at ltoa.c:10
funcend_ltoa10	EQU *
funcsize_ltoa10	EQU	funcend_ltoa10-_ltoa10


	ENDSECTION




	SECTION	initgl




*******************************************************************************

* Initialize global variables.


	ENDSECTION




	SECTION	rodata


string_literals_start	EQU	*
string_literals_end	EQU	*


*******************************************************************************

* READ-ONLY GLOBAL VARIABLES


	ENDSECTION




	SECTION	rwdata


* Statically-initialized global variables
* Statically-initialized local static variables


	ENDSECTION




	SECTION	bss


bss_start	EQU	*
* Uninitialized global variables
* Uninitialized local static variables
bss_end	EQU	*


	ENDSECTION




*******************************************************************************

* Importing 5 utility routine(s).
_ultoa10	IMPORT
cmpDWordSignedInt	IMPORT
copyDWord	IMPORT
negateDWord	IMPORT
push4ByteStruct	IMPORT


*******************************************************************************

	END
