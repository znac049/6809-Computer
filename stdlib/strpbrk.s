* 6809 assembly program generated by cmoc 0.1.86


	SECTION	code


___va_arg	IMPORT
_abs	IMPORT
_adddww	IMPORT
_atoi	IMPORT
_atol	IMPORT
_atoui	IMPORT
_atoul	IMPORT
_bsearch	IMPORT
_cmpdww	IMPORT
_delay	IMPORT
_divdwb	IMPORT
_divdww	IMPORT
_divmod16	IMPORT
_divmod8	IMPORT
_dwtoa	IMPORT
_enable_printf_float	IMPORT
_exit	IMPORT
_isalnum	IMPORT
_isalpha	IMPORT
_isdigit	IMPORT
_isspace	IMPORT
_itoa10	IMPORT
_labs	IMPORT
_ltoa10	IMPORT
_memchr	IMPORT
_memcmp	IMPORT
_memcpy	IMPORT
_memichr	IMPORT
_memicmp	IMPORT
_memmove	IMPORT
_memset	IMPORT
_memset16	IMPORT
_mulwb	IMPORT
_mulww	IMPORT
_printf	IMPORT
_putchar	IMPORT
_putstr	IMPORT
_qsort	IMPORT
_rand	IMPORT
_readline	IMPORT
_readword	IMPORT
_sbrk	IMPORT
_sbrkmax	IMPORT
_setConsoleOutHook	IMPORT
_set_null_ptr_handler	IMPORT
_set_stack_overflow_handler	IMPORT
_sprintf	IMPORT
_sqrt16	IMPORT
_sqrt32	IMPORT
_srand	IMPORT
_strcat	IMPORT
_strchr	IMPORT
_strcmp	IMPORT
_strcpy	IMPORT
_strcspn	IMPORT
_stricmp	IMPORT
_strlen	IMPORT
_strlwr	IMPORT
_strncmp	IMPORT
_strncpy	IMPORT
_strrchr	IMPORT
_strspn	IMPORT
_strstr	IMPORT
_strtok	IMPORT
_strtol	IMPORT
_strtoul	IMPORT
_strupr	IMPORT
_subdww	IMPORT
_tolower	IMPORT
_toupper	IMPORT
_ultoa10	IMPORT
_utoa10	IMPORT
_vprintf	IMPORT
_vsprintf	IMPORT
_zerodw	IMPORT
_strpbrk	EXPORT


*******************************************************************************

* FUNCTION strpbrk(): defined at strpbrk.c:5
_strpbrk	EQU	*
* Calling convention: Default
	PSHS	U
	LEAU	,S
* Formal parameter(s):
*      4,U:    2 bytes: s: const char *: line 5
*      6,U:    2 bytes: accept: const char *: line 5
* Line strpbrk.c:7: while
	BRA	L00079		jump to while condition
L00078	EQU	*		while body
* Line strpbrk.c:9: if
	CLRA
	CLRB
* Emitted no code to cast `int' to `void *'
	PSHS	B,A
* Line strpbrk.c:9: function call: strchr()
	LDB	[4,U]		indirection
	SEX			promoting byte argument to word
	PSHS	B,A		argument 2 of strchr(): const char
	LDD	6,U		variable `accept', declared at strpbrk.c:5
	PSHS	B,A		argument 1 of strchr(): const char *
	LBSR	_strchr
	LEAS	4,S
	CMPD	,S++
	BEQ	L00082		 (optim: condBranchOverUncondBranch)
* optim: condBranchOverUncondBranch
* Useless label L00081 removed
* Line strpbrk.c:10
* Line strpbrk.c:10: return with value
	LDD	4,U		variable `s', declared at strpbrk.c:5
* Emitted no code to cast `const char *' to `char *'
	BRA	L00077		return (strpbrk.c:10)
L00082	EQU	*		else clause of if() started at strpbrk.c:9
* Useless label L00083 removed
* Line strpbrk.c:11: pre-increment
	LDX	4,U		variable `s', declared at strpbrk.c:11
	LEAX	1,X
	STX	4,U
L00079	EQU	*		while condition at strpbrk.c:7
	LDB	[4,U]		indirection
* optim: loadCmpZeroBeqOrBne
	BNE	L00078
* optim: branchToNextLocation
* Useless label L00080 removed
* Line strpbrk.c:13: return with value
	CLRA
	CLRB
* Emitted no code to cast `int' to `void *'
* Emitted no code to cast `void *' to `char *'
* optim: branchToNextLocation
L00077	EQU	*		end of strpbrk()
	LEAS	,U
	PULS	U,PC
* END FUNCTION strpbrk(): defined at strpbrk.c:5
funcend_strpbrk	EQU *
funcsize_strpbrk	EQU	funcend_strpbrk-_strpbrk


	ENDSECTION




	SECTION	initgl




*******************************************************************************

* Initialize global variables.


	ENDSECTION




	SECTION	rodata


string_literals_start	EQU	*
string_literals_end	EQU	*


*******************************************************************************

* READ-ONLY GLOBAL VARIABLES


	ENDSECTION




	SECTION	rwdata


* Statically-initialized global variables
* Statically-initialized local static variables


	ENDSECTION




	SECTION	bss


bss_start	EQU	*
* Uninitialized global variables
* Uninitialized local static variables
bss_end	EQU	*


	ENDSECTION




*******************************************************************************

* Importing 1 utility routine(s).
_strchr	IMPORT


*******************************************************************************

	END
